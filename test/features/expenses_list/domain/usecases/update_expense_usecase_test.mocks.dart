// Mocks generated by Mockito 5.4.2 from annotations
// in safqah_assessment/test/features/expenses_list/domain/usecases/update_expense_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:safqah_assessment/core/error/failures.dart' as _i5;
import 'package:safqah_assessment/features/expenses_list/domain/entities/expense_item_entity.dart'
    as _i6;
import 'package:safqah_assessment/features/expenses_list/domain/repositories/expenses_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExpensesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpensesRepository extends _i1.Mock
    implements _i3.ExpensesRepository {
  @override
  _i4.Future<
      _i2.Either<_i5.Failure,
          List<_i6.ExpenseItemEntity>>> getAllExpenses() => (super.noSuchMethod(
        Invocation.method(
          #getAllExpenses,
          [],
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.Failure, List<_i6.ExpenseItemEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.ExpenseItemEntity>>(
          this,
          Invocation.method(
            #getAllExpenses,
            [],
          ),
        )),
        returnValueForMissingStub: _i4
            .Future<_i2.Either<_i5.Failure, List<_i6.ExpenseItemEntity>>>.value(
            _FakeEither_0<_i5.Failure, List<_i6.ExpenseItemEntity>>(
          this,
          Invocation.method(
            #getAllExpenses,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ExpenseItemEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> deleteItem(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #deleteItem,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, int>>.value(
                _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #deleteItem,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>> updateItem(
    int? id,
    String? name,
    double? amount,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateItem,
          [
            id,
            name,
            amount,
            date,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ExpenseItemEntity>(
          this,
          Invocation.method(
            #updateItem,
            [
              id,
              name,
              amount,
              date,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ExpenseItemEntity>(
          this,
          Invocation.method(
            #updateItem,
            [
              id,
              name,
              amount,
              date,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>> insertItem(
    String? name,
    double? amount,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertItem,
          [
            name,
            amount,
            date,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ExpenseItemEntity>(
          this,
          Invocation.method(
            #insertItem,
            [
              name,
              amount,
              date,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>>.value(
                _FakeEither_0<_i5.Failure, _i6.ExpenseItemEntity>(
          this,
          Invocation.method(
            #insertItem,
            [
              name,
              amount,
              date,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.ExpenseItemEntity>>);
}
